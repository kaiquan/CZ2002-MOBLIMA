package dao_module;

import java.util.ArrayList;

import org.json.simple.JSONObject;

import model.Booking;
import model.Guest;
import model.Movie;

public class BookingDAO extends JSONDAO {
	private JSONObject jsonObject = null;
	private ArrayList<Booking> bookings = null;
	
	public BookingDAO(){
		this.jsonObject = readFile(JSONDAO.bookingPath);
		parseJSON();
	}
	//@purpose 	: To create a new booking
	//@Param 	: (Guest) null if guest exists (optional)
	//			: (Booking) required
	public void createNewBooking(Booking booking, Guest guest){
		if(guest !=null){
			new GuestDAO().createNewGuest(guest);
		}
		//TODO add the booking object to the jsonObject
		
		updateFile(JSONDAO.bookingPath,this.jsonObject);
	}	
	
	//@purpose 	: To calculate the total ticket sales for a movie by the controller
	//@Param	: (Movie) required
	//@return	: null if no bookings
	public ArrayList<Booking> getBookingsByMovie(Movie movie){
		ArrayList<Booking> results = null;
		
		if(this.bookings!=null&&this.bookings.size()>0){
			for(int i=0;i<this.bookings.size();i++){
				if(this.bookings.get(i).getMovie().equals(movie)){
					results.add(this.bookings.get(i));
				}
			}
		}
		
		return results;
	}
	
	//@purpose	: To retrieve all bookings by a guest
	//@param	: required
	//@return	: null if bookings are empty/not found
	public ArrayList<Booking> getBookingsByGuest(Guest guest){
		ArrayList<Booking> results = null;
		
		if(this.bookings!=null&&this.bookings.size()>0){
			for(int i=0;i<this.bookings.size();i++){
				if(this.bookings.get(i).getGuest().equals(guest)){
					results.add(this.bookings.get(i));
				}
			}
		}
		
		return results;
	}
	
	
	private void parseJSON(){
		if(this.jsonObject != null){
			//TODO: PARSE BOOKING JSON FILE
		}
	}
}
